mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd)
lower <- apply(data, 2, function(x) mean(x) - 3*sd)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
m <- dim(data)[2]
i <- 2
data[,i]
data[,i] > lowe[i]
data[,i] > lower[i]
data[,i] < lower[i] | data[,i] > upper[i]
fix(data)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
m <- dim(data)[2]
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
View(data)
rnorm(seq(1:n),seq(1:n))
rnorm(seq(1:n),seq(n:1))
rnorm(n*n,mean = seq(1:n), sd = seq(n:1))
data <- rnorm(seq(1:n),seq(n:1))
data
n <- 10
data <- rnorm(seq(1:n),seq(n:1))
data
data <- rnorm(1,seq(1:n),seq(n:1))
data
n <- 7
data <- rnorm(seq(1:n),seq(n:1))
data
data <- rnorm(1:n,seq(n:1))
data
data <- rnorm(100, 1:n, sd = seq(n:1))
n <- 7
data <- rnorm(100, 1:n, sd = seq(n:1))
data
mu <- colMeans(data)
n <- 10
data <- rnorm(n*(n+3), 1:n, sd = seq(n:1))
data <- as.matrix(data, ncol = n+3)
rnorm(n*n,mean = seq(1:n), sd = seq(n:1))
data <- as.matrix(data, ncol = n + 3)
data <- rnorm(n*(n+3), 1:n, sd = seq(n:1))
data <- as.matrix(data, ncol = n + 3)
View(data)
data <- as.matrix(data, ncol = n + 3)
data
data <- as.matrix(data, ncol = n, nrow = n + 3)
data <- matrix(n*m, nrow = n)
n <- 7 # nrow
m <- 10 # ncol
data <- matrix(n*m, nrow = n)
View(data)
data <- matrix(NULL, nrow = n, ncol =m)
data <- matrix(numeric(), nrow = n, ncol =m)
View(data)
data <- matrix(numeric(0), nrow = n, ncol =m)
View(data)
rnorm(10, mean = 1, sd = 1:n)
rnorm(10, mean = 0, sd = 1:n)
x <- rnorm(10, mean = 0, sd = 1:n)
sd(x)
mean(x)
for (i in 1:n) {
data[i,] <- rnorm(10, mean = 0, sd = 1:n)
}
View(data)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
fix(data)
data <- rchisq(n*m, df = 15)
data
data <- rchisq(n*m, df = 1)
data
data <- rchisq(n*m, df = n)
data
data <- matrix(data, nrow = n, ncol =m)
View(data)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
data <- rchisq(n*m, df = 300)
data
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
n <- 7 # nrow
data <- rchisq(n*m, df = 300)
m <- 10 # ncol
data
# step 2: compute the mean + 3*sd
data <- matrix(data, nrow = n, ncol =m)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
data <- rchisq(n*m, df = 30)
data
data <- matrix(data, nrow = n, ncol =m)
# step 2: compute the mean + 3*sd
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
data <- rchisq(n*m, df = 18, ncp = 1)
data <- matrix(data, nrow = n, ncol =m)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
data
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
n <- 7 # nrow
m <- 10 # ncol
data <- matrix(numeric(), nrow = n, ncol =m)
for (i in 1:n){
data[,i] <- rnorm(m, mean = 0, sd = i)
}
for (i in 1:n){
data[i,] <- rnorm(m, mean = 0, sd = i)
}
View(data)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
View(data)
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
n <- 7 # nrow
m <- 10 # ncol
data <- matrix(numeric(), nrow = n, ncol =m)
for (i in 1:n){
data[i,] <- rnorm(m, mean = 2*i - 1, sd = i)
}
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
n <- 7 # nrow
m <- 10 # ncol
data <- matrix(numeric(), nrow = n, ncol =m)
for (i in 1:n){
data[i,] <- 0.3*rnorm(m, mean = 2*i - 1, sd = i) + rnorm(m)
}
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
n <- 7 # nrow
m <- 10 # ncol
data <- matrix(numeric(), nrow = n, ncol =m)
for (i in 1:n){
data[i,] <- 3*rnorm(m, mean = 2*i - 1, sd = i) + rnorm(m)
}
data
# step 2: compute the mean + 3*sd
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
n <- 7 # nrow
m <- 10 # ncol
data <- matrix(numeric(), nrow = n, ncol =m)
for (i in 1:n){
data[i,] <- rnorm(m, mean = 2*i^2 - 1, sd = i) + 10*rnorm(m)
}
data
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
# step 1: generate the matrix
n <- 70 # nrow
m <- 100 # ncol
data <- matrix(numeric(), nrow = n, ncol =m)
for (i in 1:n){
data[i,] <- rnorm(m, mean = 2*i^2 - 1, sd = i) + 10*rnorm(m)
}
data
# step 2: compute the mean + 3*sd
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
# HalfMonthPro 5
# Min by Mean
# step 1: generate the matrix
n <- 7 # nrow
m <- 10 # ncol
data <- matrix(numeric(), nrow = n, ncol =m)
for (i in 1:n){
data[i,] <- rnorm(m, mean = 2*i^2 - 1, sd = i) + 10*rnorm(m)
}
data
# step 2: compute the mean + 3*sd
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 2*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 2*sd(x))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
data <- matrix(numeric(), nrow = n, ncol =m)
for (i in 1:n){
data[i,] <- rnorm(m, mean = 0, sd = i) + 10*rnorm(m)
}
View(data)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 2*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 2*sd(x))
n <- 7 # nrow
m <- 10 # ncol
data <- matrix(rnorm(n*m), nrow = n, ncol =m)
set.seed(100)
data <- matrix(rnorm(n*m), nrow = n, ncol =m)
View(data)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
View(data)
for (i in 1:m){
}
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
View(data)
set.seed(111)
data <- matrix(rnorm(n*m), nrow = n, ncol =m)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
n <- 700 # nrow
m <- 1000 # ncol
set.seed(111)
data <- matrix(rnorm(n*m), nrow = n, ncol =m)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
n <- 50 # nrow
m <- 60 # ncol
set.seed(111)
data <- matrix(rnorm(n*m), nrow = n, ncol =m)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
n <- 50 # nrow
m <- 60 # ncol
set.seed(111)
data <- matrix(rnorm(n*m), nrow = n)
View(data)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x) + 3*sd(x))
lower <- apply(data, 2, function(x) mean(x) - 3*sd(x))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
n <- 50 # nrow
m <- 60 # ncol
set.seed(111)
data <- matrix(rnorm(n*m), nrow = n)
datax <- data[,3]
n <- 7 # nrow
m <- 8 # ncol
set.seed(111)
data <- matrix(rnorm(n*m), nrow = n)
datax <- data[,3]
View(data)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x, na.rm = TRUE) + sd(x, na.rm = TRUE))
lower <- apply(data, 2, function(x) mean(x, na.rm = TRUE) - sd(x, na.rm = TRUE))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- mean[i]
}
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- mu[i]
}
View(data)
set.seed(512)
data <- matrix(rnorm(n*m), nrow = n)
upper <- apply(data, 2, function(x) mean(x, na.rm = TRUE) + sd(x, na.rm = TRUE))
lower <- apply(data, 2, function(x) mean(x, na.rm = TRUE) - sd(x, na.rm = TRUE))
mu <- colMeans(data)
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- mu[i]
}
View(data)
n <- 8 # nrow
m <- 9 # ncol
set.seed(512)
set.seed(1030)
data <- matrix(rnorm(n*m), nrow = n)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x, na.rm = TRUE) + sd(x, na.rm = TRUE))
lower <- apply(data, 2, function(x) mean(x, na.rm = TRUE) - sd(x, na.rm = TRUE))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- mu[i]
}
View(data)
set.seed(3240)
data <- matrix(rnorm(n*m), nrow = n)
datax <- data[,3]
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x, na.rm = TRUE) + sd(x, na.rm = TRUE))
lower <- apply(data, 2, function(x) mean(x, na.rm = TRUE) - sd(x, na.rm = TRUE))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- mu[i]
View(data)
View(data)
n <- 20 # nrow
m <- 9 # ncol
set.seed(3240)
data <- matrix(rnorm(n*m), nrow = n)
datax <- data[,3]
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x, na.rm = TRUE) + sd(x, na.rm = TRUE))
lower <- apply(data, 2, function(x) mean(x, na.rm = TRUE) - sd(x, na.rm = TRUE))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- mu[i]
}
View(data)
n <- 15 # nrow
m <- 8 # ncol
set.seed(3240)
data <- matrix(rnorm(n*m), nrow = n)
datax <- data[,3]
n <- 15 # nrow
m <- 8 # ncol
set.seed(3240)
data <- matrix(rnorm(n*m), nrow = n)
}
n <- 15 # nrow
m <- 8 # ncol
set.seed(3240)
data <- matrix(rnorm(n*m), nrow = n)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x, na.rm = TRUE) + sd(x, na.rm = TRUE))
lower <- apply(data, 2, function(x) mean(x, na.rm = TRUE) - sd(x, na.rm = TRUE))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- mu[i]
}
View(data)
n <- 10 # nrow
m <- 8 # ncol
set.seed(1090)
data <- matrix(rnorm(n*m), nrow = n)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x, na.rm = TRUE) + sd(x, na.rm = TRUE))
lower <- apply(data, 2, function(x) mean(x, na.rm = TRUE) - sd(x, na.rm = TRUE))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- mu[i]
}
View(data)
n <- 10 # nrow
m <- 80 # ncol
set.seed(1090)
data <- matrix(rnorm(n*m), nrow = n)
View(data)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x, na.rm = TRUE) + sd(x, na.rm = TRUE))
lower <- apply(data, 2, function(x) mean(x, na.rm = TRUE) - sd(x, na.rm = TRUE))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- mu[i]
}
View(data)
n <- 10 # nrow
m <- 8 # ncol
set.seed(1090)
data <- matrix(rnorm(n*m), nrow = n)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x, na.rm = TRUE) + sd(x, na.rm = TRUE))
lower <- apply(data, 2, function(x) mean(x, na.rm = TRUE) - sd(x, na.rm = TRUE))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
n <- 10 # nrow
m <- 8 # ncol
set.seed(1090)
data <- matrix(rnorm(n*m), nrow = n)
View(data)
mu <- colMeans(data)
n <- 10 # nrow
m <- 8 # ncol
set.seed(1090)
data <- matrix(rnorm(n*m), nrow = n)
View(data)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x, na.rm = TRUE) + sd(x, na.rm = TRUE))
lower <- apply(data, 2, function(x) mean(x, na.rm = TRUE) - sd(x, na.rm = TRUE))
View(data)
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
set.seed(1090)
data <- matrix(rnorm(n*m), nrow = n)
View(data)
mu <- colMeans(data)
upper <- apply(data, 2, function(x) mean(x, na.rm = TRUE) + sd(x, na.rm = TRUE))
lower <- apply(data, 2, function(x) mean(x, na.rm = TRUE) - sd(x, na.rm = TRUE))
for (i in 1:m){
data[,i][data[,i] < lower[i] | data[,i] > upper[i]] <- NA
}
View(data)
n <- 10 # nrow
m <- 8 # ncol
set.seed(1090)
data <- matrix(rnorm(n*m), nrow = n)
write.csv(data,file = "data.csv")
getw()
getwd()
pnorm(1)
2*pnorm(1,mean = 0,sd = 1,lower.tail = FALSE)
class(data)
is.matrix(data)
setwd("E:/Sola/Git/Love2Share/HalfMonthProb/5.Outlying_by_mean")
source("SOM.R")
SOM(data)
source("SOM.R")
SOM(data)
View(data)
View(data)
SOM(data)
View(data)
SOM(data)
source("SOM.R")
SOM(data)
View(data)
u <- SOM(data)
View(u)
source("SOM.R")
SOM(a)
SOM(mu)
SOM(i)
SOM(m)
datax <- data[,2]
View(datax)
datax <- data[;2]
data
data[,1]
data[,2]
SOM(data[,2])
SOM(as.matrix(data[,2]))
as.matrix(lower)
as.matrix(m)
as.matrix("e")
data[,3]
class(data[,3])
type(data[,3])
is.vector(data[,3])
source("SOM.R")
SOM(data[,3])
SOM(data[,2])
SOM(data[,1])
SOM(data)
SOM(data)
SOM(data)
SOM(data[,1:3])
SOM[data[,1]]
SOM(data[,1])
SOM(data[,2])
type(data[,1:3])
class(data[,1:3])
class(data[,2])
is.matrix(data[,2])
is.matrix(data[, 1:3])
SOM(data[, 1:3])
is.matrix(data[, 2])
SOM(data[, 2])
is.vector(data[, 2])
is.vector(1)
is.vector(c("1",3))
SOM("um")
